{"version":3,"sources":["Components/Header.js","Components/Form.js","Components/Singletodo.js","Components/Todolist.js","Components/Alart.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","mode","href","title","id","type","role","onClick","toggleMode","htmlFor","Form","onClickHandler","e","text","setTodo","todo","completed","editItem","Math","random","setText","alert","style","width","value","onChange","target","onKeyDown","key","setStatus","Singletodo","useState","editText","setEditText","singletodo","map","item","class","preventDefault","xmlns","height","fill","viewBox","d","window","confirm","filter","console","log","showAlart","Todolist","display","justifyContent","filterTodo","Alart","alart","textAlign","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","App","setAlart","setMode","status","setFilterTodo","useEffect","filterHandler","document","body","backgroundColor","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a58f82df.chunk.js","sourcesContent":["import React from 'react'\n\n\nexport default function Header(props) {\n  return (\n    <div>\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n          {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button> */}\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/\">About</a>\n              </li>\n            </ul>\n            <div className={`form-check form-switch text-${props.mode === \"light\"? \"dark\":\"light\"}`}>\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`${props.mode === \"light\"? \"Enable DarkMode\" : \"Enable LightMode\"}`}</label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  )\n}\n","\n\nexport default function Form(props) {\n\n\n\n\n    let inputHandler = (e) => {\n        props.setText(e.target.value)\n    }\n\n    let onClickHandler = (e) => {\n        \n        if (!props.text) {\n            alert(\"text area can not be blanked\")\n        }\n        else {\n            props.setTodo([\n                ...props.todo, { text: props.text, completed: false, editItem : false, id: Math.random() * 1000 }\n            ])\n            // console.log(text);\n            props.setText(\"\");\n        }\n    }\n\n    const onclickHandler2 = (e) =>{\n        props.setStatus(e.target.value)\n    }\n\n    const onKeyDownHandler = (e) => {\n        if (e.key === \"Enter\") {\n            onClickHandler()\n        }\n    }\n\n    let boxStyle1 = {\n        width: \"40rem\"\n    }\n    return (\n        <div className=\"d-flex justify-content-center\">\n\n            <div className=\"input-group mb-3 my-3\" style={boxStyle1}>\n                <input type=\"text\" value={props.text} onChange={inputHandler} onKeyDown={onKeyDownHandler}\n                className=\"form-control\" />\n                <button className=\"btn btn-outline-success\" type=\"button\" onClick={onClickHandler} >Add</button>\n            </div>\n            <div className=\"m-3\">\n                <select className=\"filter-todo\" onChange={onclickHandler2}>\n                    <option value=\"all\">All</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"uncompleted\">Uncompleted</option>\n                </select>\n            </div>\n\n        </div>\n    )\n}\n","import React,{useState} from 'react'\n\n\n\nexport default function Singletodo(props) {\n\n\n    const [editText, setEditText] = useState(props.text)\n\n    const deleteHandler = () => {\n        if (window.confirm(\"are you sure to delete this item?\")) {\n            props.setTodo(props.todo.filter(e => e.id !== props.singletodo.id))\n            console.log(props.singletodo)\n            props.showAlart(\"Item Delete Successfull\", \"success\")\n        }\n    }\n\n    const editHandler = () => {\n        props.setTodo(props.todo.map(e => {\n            if (e.id === props.singletodo.id) {\n                return {...e, editItem : !e.editItem}\n                \n            }\n            return e;\n        }))\n        \n    }\n    const checkHandler = () => {\n        props.setTodo(props.todo.map(item => {\n            if (item.id === props.singletodo.id) {\n                return { ...item, completed: !item.completed }\n\n            }\n            return item;\n        }))\n    }\n\n    const onChangeHandler = (e) =>{\n        setEditText(e.target.value)\n    }\n\n    const updateHandler = (e) =>{\n        e.preventDefault();\n        if (!editText) {\n            alert(\"text area can not be blanked\")\n        }\n        else {\n            props.setTodo((props.todo.map(e => {\n                if (e.id === props.singletodo.id) {\n                    return {...e, editItem : !e.editItem , text:editText}\n                    \n                }\n                return e;\n            })))\n        }\n    }\n\n    \n\n    return (\n\n       \n       <>\n       \n            <div className=\"singletodo d-flex mb-2\">\n                <li className={`list-group-item ${props.singletodo.completed ? \"completed\" : \"\"} d-flex myLiStyle`}> <input className=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"flexCheckIndeterminate\" onClick={checkHandler} />\n                    {props.editItem ? <input className =\"myLiStyle1\"value={editText} onChange={onChangeHandler} /> : <div>{props.text}</div>}\n                </li>\n               {props.editItem ? (<button type=\"button\" class=\"btn btn-success ms-1\"  onClick={updateHandler}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-repeat\" viewBox=\"0 0 16 16\">\n  <path d=\"M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z\"></path>\n  <path fill-rule=\"evenodd\" d=\"M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z\"></path>\n</svg>\n              </button>):( <button type=\"button\" className=\"btn btn-secondary ms-1\" onClick={editHandler}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"></path>\n                    </svg>\n                </button>)}\n                <button type=\"button\" className=\"btn btn-danger ms-1\" onClick={deleteHandler}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"></path>\n                    </svg>\n                </button>\n            </div>\n           \n            </>\n    )\n}\n","import React from 'react'\nimport Singletodo from './Singletodo'\n\nexport default function Todolist(props) {\n\n    let listStyle ={\n        display:\"flex\",\n        justifyContent: \"center\"\n    }\n    return (\n        <div className=\"container\"style={listStyle}>\n            <ul className=\"list-group\" >\n            {/* <Singletodo todos={props.todos} setTodo={props.setTodo}/>  */}\n            {props.filterTodo.map((singletodo) =>(\n                <Singletodo key={singletodo.id}text={singletodo.text} todo={props.todo} setTodo={props.setTodo} singletodo={singletodo} showAlart={props.showAlart} mode={props.mode}  setText={props.setText} editItem={singletodo.editItem} editText ={props.editText} setEditText={props.setEditText}/>\n            ))}\n            </ul>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Alart(props) {\n    const capitalize = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\n    }\n\n    let alartStyle = {\n       textAlign:\"center\"\n    }\n    return (\n       props.alart && <div className={`alert alert-${props.alart.type} `} role=\"alert\" >\n        <div style={alartStyle}>\n        {capitalize(props.alart.type)} : {props.alart.text};\n        </div>\n      </div>\n    )\n}\n","import './App.css';\nimport Header from \"./Components/Header\";\nimport Form from \"./Components/Form\";\nimport Todolist from \"./Components/Todolist\";\nimport Alart from './Components/Alart'\nimport React, { useState,useEffect } from 'react'\n\n\n\n\nfunction App() {\n\n\n  const [text, setText] = useState(\"\")\n\n  const [todo, setTodo] = useState([])\n\n  const [alart, setAlart] = useState(null)\n\n  const [mode, setMode] = useState(\"light\")\n\n  const [status, setStatus] = useState(\"all\")\n\n  const [filterTodo, setFilterTodo] = useState([])\n\n  \n\n\n \n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"black\"\n    }\n    else{\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n    }\n  }\n\n  const showAlart = (text,type) =>{\n    setAlart({\n      text : text,\n      type : type \n    })\n    setTimeout(() => {\n      setAlart(null)\n    }, 1000);\n  }\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\": setFilterTodo(todo.filter(todo => todo.completed === true));\n        break;\n\n        case \"uncompleted\": setFilterTodo(todo.filter(todo => todo.completed === false));\n        break;\n    \n      default: setFilterTodo(todo);\n        break;\n    }\n  }\n\n  useEffect(() => {\n    filterHandler()\n  }, [todo,status])\n\n  // const saveMyTodo = (text) => {\n  //   let  todos = [...todo, {text:text,completed:false,id:Math.random()*1000}];\n  //   setTodo(todos)\n  //   // console.log(todos)\n  //   // console.log(todo.map((e,i) => <div key = {i}>{e}</div>))\n  // }\n \n  // const deleteMyTodo = (todos) => {\n  //   console.log('delete',todo)\n  //   setTodo(todos.filter((e) => e !== todos.id ));\n  // }\n  \n  return (\n    <>\n      <Header title=\"Todo\" mode={mode} toggleMode={toggleMode}/>\n      <div className=\"container\">\n      {/* <Form setTodo={(n) => saveMyTodo(n)}  */}\n        <Form setTodo={setTodo} todo={todo} setText={setText} text={text} setStatus={setStatus} />\n      </div>\n      <Alart alart={alart}/>\n      <Todolist todo={todo} setTodo={setTodo} showAlart={showAlart} mode={mode}  text ={text} filterTodo={filterTodo}/>\n      {/* {todo.map((e,i) => <div key = {i}>{e}</div>)} */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}